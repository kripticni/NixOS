# Edit this configuration file to define what should be installed on
# your system. Help is available in the configuration.nix(5) man page, on
# https://search.nixos.org/options and in the NixOS manual (`nixos-help`).

{ config, lib, pkgs, ... }:

{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    ];

  # Use the systemd-boot EFI boot loader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  # networking.hostName = "nixos"; # Define your hostname.
  # Pick only one of the below networking options.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.
  networking.networkmanager.enable = true;  # Easiest to use and most distros use this by default.

  # Set your time zone.
  time.timeZone = "Europe/Belgrade";

  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # Select internationalisation properties.
  i18n.defaultLocale = "en_US.UTF-8";
  console = {
    font = "Lat2-Terminus16";
    keyMap = "us";
  #  useXkbConfig = true; # use xkb.options in tty.
  };

  # Enable the X11 windowing system.
  services.xserver = {
	enable = true;
	xkb.layout = "us";

	displayManager = {
		lightdm.enable = true;
		#defaultSession = "none+awesome";
	};

		windowManager.awesome = {
		enable = true;
		luaModules = with pkgs.luaPackages; [
			luarocks
			luadbi-mysql
		];
	};
};

  # Configure keymap in X11
  # services.xserver.xkb.layout = "us";
  # services.xserver.xkb.options = "eurosign:e,caps:escape";

  # Enable CUPS to print documents.
  # services.printing.enable = true;

  # Enable sound.
  hardware.pulseaudio.enable = true;
  # OR
  # services.pipewire = {
  #   enable = true;
  #   pulse.enable = true;
  # };

  # Enable touchpad support (enabled default in most desktopManager).
  services.libinput.enable = true;

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.aleksic = {
    isNormalUser = true;
    extraGroups = [ "wheel" "sudo" "video" "audio" ]; # Enable ‘sudo’ for the user.
    packages = with pkgs; [
       firefox
       tree
    ];
    initialPassword="pw123";
  };

  # List packages installed in system profile. To search, run:
  # $ nix search wget
  nixpkgs.config.permittedInsecurePackages = [
	"openssl-1.1.1w"
	"python-2.7.18.8"
	];
  nixpkgs.config.allowUnfreePredicate = _: true;
  nixpkgs.overlays = [
  	(import ./overlay.nix)
	(final: prev: {
		nginxStable = prev.nginxStable.override { openssl = pkgs.openssl_3_3; };
	})
  ];
  environment.systemPackages = with pkgs; [
    libinput
    myAwesome
    home-manager
    polybarFull
    rofi
    picom-pijulius
    pulseaudioFull
    pavucontrol
    alsa-lib
    alsa-oss
    alsa-utils
    alsa-tools
    meson
    ninja
    gdb
    clang
    cargo
    clippy
    rustfmt
    rustup
    evcxr
    bacon
    sccache
    uutils-coreutils
    gitui
    cargo-info
    speedtest-rs
    wiki-tui
    alacritty
    zsh
    zsh-completions
    zsh-autosuggestions
    zsh-powerlevel10k
    zsh-syntax-highlighting
    zsh-autocomplete
    zinit
    tmux
    openssl_3_3
    vim # Do not forget to add an editor to edit configuration.nix! The Nano editor is also installed by default.
    ranger
    libreoffice
    discord
    discordo
    spotify
    spotifyd
    neovim
    git
    cmake
    pkg-config
    rPackages.pkgconfig
    gnumake
    gnome.nautilus 
    telegram-desktop
    viber
    mpd
    ncmpcpp
    python
    python312Packages.pkgconfig
    python312Packages.pip
    pipx
    lua
    luarocks
    gobject-introspection
    lua51Packages.lgi
    lua54Packages.lua
    lua54Packages.luarocks
    lua54Packages.luadbi
    lua54Packages.luadbi-mysql
    lua54Packages.luacheck
    lua54Packages.luacov
    luajit
    luajitPackages.ldoc
    luajitPackages.luarocks
    luajitPackages.luadbi
    luajitPackages.luadbi-mysql
    luajitPackages.luacheck
    luajitPackages.luacov
    luajitPackages.lgi
    perl536Packages.PkgConfig
    pcre
    pcre2
    unzip
    zip
    gnutar
    libgcc
    wget
    brave
    orchis-theme
    ripgrep
    ripgrep-all
    bat
    delta
    lsd
    gtk4
    gtk3
    gtk2
    vlc
    kdePackages.oxygen
    gnome.eog
    gthumb
    zathura
    aria2
    whitesur-kde
    spotdl
    obsidian
    lazygit
    syncthing
    virtualbox
    scrcpy
    protonplus
    lutris
    steam
    heroic
    gogdl
    wine
    gimp
    drawing
    imagemagick
    xcbuild
    xcbuildHook
    xorg.xcbutilerrors
    xorg.xinit
    xorg.xcbutil
    xorg.xcbutilwm
    xorg.libxcb.dev
    xorg.libxcb
    xorg.xcbproto
    xorg.xcbutilkeysyms
    xorg.xcbutilrenderutil
    xorg.xcbutilimage
    xorg.xcbutilcursor
    cairo
    mount
    util-linux
    mount-zip
    squashfuse
    fuse
    fuse3
    luajitPackages.busted
    lua54Packages.busted
    luajitPackages.luacheck
    lua54Packages.luacheck
    fontconfig
    rpm
    dpkg
    libselinux
    libsepol
  ];

  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  programs.mtr.enable = true;
  programs.gnupg.agent = {
    enable = true;
    enableSSHSupport = true;
  };

  # List services that you want to enable:

  # Enable the OpenSSH daemon.
  services.openssh.enable = true;

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;

  # Copy the NixOS configuration file and link it from the resulting system
  # (/run/current-system/configuration.nix). This is useful in case you
  # accidentally delete configuration.nix.
  system.copySystemConfiguration = true;

  # This option defines the first version of NixOS you have installed on this particular machine,
  # and is used to maintain compatibility with application data (e.g. databases) created on older NixOS versions.
  #
  # Most users should NEVER change this value after the initial install, for any reason,
  # even if you've upgraded your system to a new NixOS release.
  #
  # This value does NOT affect the Nixpkgs version your packages and OS are pulled from,
  # so changing it will NOT upgrade your system - see https://nixos.org/manual/nixos/stable/#sec-upgrading for how
  # to actually do that.
  #
  # This value being lower than the current NixOS release does NOT mean your system is
  # out of date, out of support, or vulnerable.
  #
  # Do NOT change this value unless you have manually inspected all the changes it would make to your configuration,
  # and migrated your data accordingly.
  #
  # For more information, see `man configuration.nix` or https://nixos.org/manual/nixos/stable/options#opt-system.stateVersion .
  system.stateVersion = "24.05"; # Did you read the comment?

}
